logging {
  level  = "debug"
  format = "logfmt"
}

tracing {
  // Internal Alloy traces (opcional)
  sampling_fraction = 1
}

// OTLP receiver (apps) -> Tempo (via batch)
otelcol.receiver.otlp "otlp" {
  grpc { endpoint = "0.0.0.0:4317" }
  // http { endpoint = "0.0.0.0:4318" }  // habilite se precisar OTLP/HTTP
  output { traces = [otelcol.processor.batch.default.input] }
}

otelcol.processor.batch "default" {
  output { traces = [otelcol.exporter.otlp.tempo.input] }
}

otelcol.exporter.otlp "tempo" {
  client {
    endpoint = "tempo:4317"
    tls { insecure = true }
  }
}

// Discovery for Docker containers (Alloy Scenarios style)
discovery.docker "linux" {
  host = "unix:///var/run/docker.sock"
}

// Relabel rules applied to discovered containers
discovery.relabel "logs_integrations_docker" {
  targets = discovery.docker.linux.targets

  // Keep only containers explicitly enabled
  rule {
    action        = "keep"
    source_labels = ["__meta_docker_container_label_solview_enabled"]
    regex         = "true"
  }

  // container_name without leading '/'
  rule {
    action        = "replace"
    source_labels = ["__meta_docker_container_name"]
    target_label  = "container_name"
    regex         = "/(.*)"
    replacement   = "$1"
  }

  // Short alias
  rule {
    action        = "replace"
    source_labels = ["container_name"]
    target_label  = "container"
  }

  // app label from compose; fallback to container_name
  rule {
    action        = "replace"
    source_labels = ["__meta_docker_container_label_app"]
    target_label  = "app"
  }
  rule {
    action        = "replace"
    source_labels = ["container_name"]
    target_label  = "app"
  }

  // service_name from label; fallback to container_name
  rule {
    action        = "replace"
    source_labels = ["__meta_docker_container_label_solview_service_name"]
    target_label  = "service_name"
  }
  rule {
    action        = "replace"
    source_labels = ["container_name"]
    target_label  = "service_name"
  }

  // environment from label; default to development
  rule {
    action        = "replace"
    source_labels = ["__meta_docker_container_label_solview_environment"]
    target_label  = "environment"
  }
  rule {
    action       = "replace"
    target_label = "environment"
    replacement  = "development"
  }

  // stable job label
  rule {
    action       = "replace"
    target_label = "job"
    replacement  = "docker"
  }
}

// Collect logs from discovered Docker containers and apply relabels
loki.source.docker "default" {
  host          = "unix:///var/run/docker.sock"
  targets       = discovery.docker.linux.targets
  labels        = { "platform" = "docker" }
  relabel_rules = discovery.relabel.logs_integrations_docker.rules
  forward_to    = [loki.write.default.receiver]
}

loki.write "default" {
  endpoint { url = "http://loki:3100/loki/api/v1/push" }
}